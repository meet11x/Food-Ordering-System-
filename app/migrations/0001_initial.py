# Generated by Django 4.2.11 on 2024-03-25 11:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('UserID', models.AutoField(primary_key=True, serialize=False)),
                ('Phone', models.CharField(max_length=10)),
                ('Address', models.CharField(max_length=255)),
                ('UserType', models.CharField(choices=[('Customer', 'Customer'), ('Restaurant Owner', 'Restaurant Owner'), ('Admin', 'Admin')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('AdminID', models.AutoField(primary_key=True, serialize=False)),
                ('Username', models.CharField(max_length=255)),
                ('Password', models.CharField(max_length=255)),
                ('Email', models.EmailField(max_length=255)),
                ('Phone', models.CharField(max_length=20)),
                ('AccessLevel', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Couriers',
            fields=[
                ('CourierID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('Phone', models.CharField(max_length=20)),
                ('VehicleType', models.CharField(max_length=255)),
                ('Availability', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAreas',
            fields=[
                ('AreaID', models.AutoField(primary_key=True, serialize=False)),
                ('AreaName', models.CharField(max_length=255)),
                ('PostalCodeRangeStart', models.CharField(max_length=255)),
                ('PostalCodeRangeEnd', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCategories',
            fields=[
                ('CategoryID', models.AutoField(primary_key=True, serialize=False)),
                ('CategoryName', models.CharField(max_length=255)),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MenuItems',
            fields=[
                ('MenuItemID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('Description', models.TextField()),
                ('Price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ImageURL', models.CharField(max_length=255)),
                ('Availability', models.BooleanField()),
                ('CategoryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.menucategories')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('OrderID', models.AutoField(primary_key=True, serialize=False)),
                ('OrderDate', models.DateField()),
                ('DeliveryDate', models.DateField()),
                ('Status', models.CharField(max_length=255)),
                ('TotalPrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('DeliveryAddress', models.CharField(max_length=255)),
                ('PaymentMethod', models.CharField(max_length=255)),
                ('PaymentStatus', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurants',
            fields=[
                ('RestaurantID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('Description', models.TextField()),
                ('Address', models.CharField(max_length=255)),
                ('Phone', models.CharField(max_length=20)),
                ('Email', models.EmailField(max_length=255)),
                ('Website', models.CharField(max_length=255)),
                ('OpeningHours', models.CharField(max_length=255)),
                ('DeliveryAreas', models.TextField()),
                ('DeliveryFee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('MinimumOrderAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Rating', models.FloatField()),
                ('TotalReviews', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('ReviewID', models.AutoField(primary_key=True, serialize=False)),
                ('Rating', models.IntegerField()),
                ('Comment', models.TextField()),
                ('Date', models.DateField()),
                ('RestaurantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.restaurants')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('PaymentID', models.AutoField(primary_key=True, serialize=False)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PaymentDate', models.DateField()),
                ('PaymentMethod', models.CharField(max_length=255)),
                ('TransactionID', models.CharField(max_length=255)),
                ('PaymentStatus', models.CharField(max_length=255)),
                ('OrderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.orders')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='RestaurantID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.restaurants'),
        ),
        migrations.AddField(
            model_name='orders',
            name='UserID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('OrderItemID', models.AutoField(primary_key=True, serialize=False)),
                ('Quantity', models.IntegerField()),
                ('Price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('MenuItemID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.menuitems')),
                ('OrderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.orders')),
            ],
        ),
        migrations.AddField(
            model_name='menuitems',
            name='RestaurantID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.restaurants'),
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('DeliveryID', models.AutoField(primary_key=True, serialize=False)),
                ('DeliveryDate', models.DateField()),
                ('DeliveryStatus', models.CharField(max_length=255)),
                ('CourierID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.couriers')),
                ('OrderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.orders')),
            ],
        ),
    ]
